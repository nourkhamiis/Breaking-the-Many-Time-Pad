-----------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------- APPROACH ----------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------
>> SPACE Position Approach

    ASCII Code for space  = 0x20 =     0010 0000 
    ASCII Code for Uppercase letters = 0100 0001 --to--> 0101 1010
    ASCII Code for Lowercase letters = 0110 0001 --to--> 0111 1010

    The difference between upper and lower case letters representation in binary only appears in (bit 5) which equals 1 in the space

    So, XORing a space with any Uppercase Letter will produce the Lowercase version of it
    And XORing a space with any Lowercase Letter will produce the Uppercase version of it

    XORing any letter with another letter will NEVER produce another letter (neither uppercase nor lowercase)

    So, when we XOR any two bytes and a letter ASCII Code results, this means that there is a possibility of a space being in this position

    A-Z: 65-90
    a-z: 97-122

    ASCII Range for all characters is 0-127 (7-bits: 0000000 to 1111111)
    
    Printable Character Range is 32-126 (' ' to '~')
-----------------------------------------------------------------------------------------------------------------------------
>> XORing each 2 Ciphertexts

    If an ASCII letter appears, this means that it was a SPACE in one of the two Ciphertexts at that position 'pos'

    This means that we are able to deduce part of the plaintext which is the ' ' at pos of one of them

    Now we know plaintext[pos] and we already have the entire Ciphertext

    By knowing the part of the plaintext and the entire ciphertext , we are able to deduce part of the key

        >> plaintext[pos] XOR ciphertext[pos] = KEY[pos] = ' ' XOR ciphertext[pos] = 0x20 XOR ciphertext[pos]
    
    This is the role of the function: possible_space_positions_for_ciphers(c1,c2)
-----------------------------------------------------------------------------------------------------------------------------
>> XORing each ciphertext c with all other ciphertexts

    Now we are able to deduce all possible locations of spaces in ciphertext c

    We will use "voting" or a "treshold" to determine the most common places for there to exist a space in c

        >> Since there are 8 ciphers, we XOR each cipher c with 7 others

        >> The threshold chosen is (>3)
           This means that if c could have a space in position pos
           To consider it, pos has to appear at least 4 times with c as a result of XORing and saving the indices of letters
-----------------------------------------------------------------------------------------------------------------------------
>> By identifying the space positions in all ciphers, now we are able to XOR those positions with the plaintexts
    
    As a result, we will extract part of the key, and then XOR it with the ciphers, thus revealing parts of the PLAINTEXTS

    By doing some educated guesses on the revealed plaintexts, we are able to extract more and more of the key

    As shown below, the ciphers are broken in only 3 Iterations (making educated guesses only TWICE)
        >> By iteration I mean XORing the current KEY with all the ciphertexts, extracting parts/all of the plaintexts
-----------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------
---------------------------------- ANALYZING CIPHERTEXTS FOR SPACES ---------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

Analyzing Ciphertext 0 ..
Possible Spaces of 0 and 1 are:  [6, 7, 19, 21, 27, 28, 35, 36, 40, 45, 49, 50]
Possible Spaces of 0 and 2 are:  [2, 5, 6, 9, 22, 27, 28, 34, 36, 37, 40, 47, 49]
Possible Spaces of 0 and 3 are:  [1, 6, 7, 13, 23, 36, 37]
Possible Spaces of 0 and 4 are:  [4, 6, 11, 14, 19, 23, 28, 34, 36, 40, 42, 49]
Possible Spaces of 0 and 5 are:  [6, 8, 12, 15, 19, 21, 36, 37, 42, 49, 52]
Possible Spaces of 0 and 6 are:  [10, 22, 28, 29, 33, 36, 40, 43, 47, 49]
Possible Spaces of 0 and 7 are:  [6, 8, 11, 15, 19, 23, 26, 28, 40, 42]

Common Space Positions for Ciphertext 0:  [6, 19, 28, 36, 40, 49] 

Analyzing Ciphertext 1 ..
Possible Spaces of 1 and 0 are:  [6, 7, 19, 21, 27, 28, 35, 36, 40, 45, 49, 50]
Possible Spaces of 1 and 2 are:  [2, 5, 7, 9, 19, 21, 22, 34, 35, 37, 45, 47, 50]
Possible Spaces of 1 and 3 are:  [1, 13, 19, 21, 23, 27, 28, 35, 37, 40, 45, 49, 50]
Possible Spaces of 1 and 4 are:  [4, 7, 11, 14, 21, 23, 27, 34, 35, 42, 45, 50]
Possible Spaces of 1 and 5 are:  [7, 8, 12, 15, 27, 28, 35, 37, 40, 42, 45, 50, 52]
Possible Spaces of 1 and 6 are:  [6, 7, 10, 19, 21, 22, 27, 29, 33, 35, 43, 45, 47, 50]
Possible Spaces of 1 and 7 are:  [7, 8, 11, 15, 21, 23, 26, 27, 35, 36, 42, 45, 49, 50]

Common Space Positions for Ciphertext 1:  [7, 19, 21, 27, 35, 45, 50] 

Analyzing Ciphertext 2 ..
Possible Spaces of 2 and 0 are:  [2, 5, 6, 9, 22, 27, 28, 34, 36, 37, 40, 47, 49]
Possible Spaces of 2 and 1 are:  [2, 5, 7, 9, 19, 21, 22, 34, 35, 37, 45, 47, 50]
Possible Spaces of 2 and 3 are:  [1, 2, 5, 7, 9, 13, 22, 23, 27, 28, 34, 40, 47, 49]
Possible Spaces of 2 and 4 are:  [2, 4, 5, 9, 11, 14, 19, 22, 23, 27, 37, 42, 47]
Possible Spaces of 2 and 5 are:  [2, 5, 8, 9, 12, 15, 19, 21, 22, 27, 28, 34, 40, 42, 47, 52]
Possible Spaces of 2 and 6 are:  [2, 5, 6, 9, 10, 27, 29, 33, 34, 37, 43]
Possible Spaces of 2 and 7 are:  [2, 5, 8, 9, 11, 15, 19, 22, 23, 26, 27, 34, 36, 37, 42, 47, 49]

Common Space Positions for Ciphertext 2:  [2, 5, 9, 22, 27, 34, 37, 47, 19] 

Analyzing Ciphertext 3 ..
Possible Spaces of 3 and 0 are:  [1, 6, 7, 13, 23, 36, 37]
Possible Spaces of 3 and 1 are:  [1, 13, 19, 21, 23, 27, 28, 35, 37, 40, 45, 49, 50]
Possible Spaces of 3 and 2 are:  [1, 2, 5, 7, 9, 13, 22, 23, 27, 28, 34, 40, 47, 49]
Possible Spaces of 3 and 4 are:  [1, 4, 7, 11, 13, 14, 19, 28, 34, 37, 40, 42, 49]
Possible Spaces of 3 and 5 are:  [1, 7, 8, 12, 13, 15, 19, 21, 23, 42, 49, 52]
Possible Spaces of 3 and 6 are:  [1, 6, 7, 10, 13, 22, 23, 28, 29, 33, 37, 40, 43, 47, 49]
Possible Spaces of 3 and 7 are:  [1, 7, 8, 11, 13, 15, 19, 26, 28, 36, 37, 40, 42]

Common Space Positions for Ciphertext 3:  [1, 7, 13, 23, 37, 19, 28, 40, 49] 

Analyzing Ciphertext 4 ..
Possible Spaces of 4 and 0 are:  [4, 6, 11, 14, 19, 23, 28, 34, 36, 40, 42, 49]
Possible Spaces of 4 and 1 are:  [4, 7, 11, 14, 21, 23, 27, 34, 35, 42, 45, 50]
Possible Spaces of 4 and 2 are:  [2, 4, 5, 9, 11, 14, 19, 22, 23, 27, 37, 42, 47]
Possible Spaces of 4 and 3 are:  [1, 4, 7, 11, 13, 14, 19, 28, 34, 37, 40, 42, 49]
Possible Spaces of 4 and 5 are:  [4, 8, 11, 12, 14, 15, 21, 23, 28, 34, 37, 40, 52]
Possible Spaces of 4 and 6 are:  [4, 6, 10, 11, 14, 19, 22, 23, 29, 33, 34, 42, 43, 47]
Possible Spaces of 4 and 7 are:  [4, 8, 14, 15, 26, 34, 36, 49]

Common Space Positions for Ciphertext 4:  [4, 11, 14, 19, 23, 34, 42] 

Analyzing Ciphertext 5 ..
Possible Spaces of 5 and 0 are:  [6, 8, 12, 15, 19, 21, 36, 37, 42, 49, 52]
Possible Spaces of 5 and 1 are:  [7, 8, 12, 15, 27, 28, 35, 37, 40, 42, 45, 50, 52]
Possible Spaces of 5 and 2 are:  [2, 5, 8, 9, 12, 15, 19, 21, 22, 27, 28, 34, 40, 42, 47, 52]
Possible Spaces of 5 and 3 are:  [1, 7, 8, 12, 13, 15, 19, 21, 23, 42, 49, 52]
Possible Spaces of 5 and 4 are:  [4, 8, 11, 12, 14, 15, 21, 23, 28, 34, 37, 40, 52]
Possible Spaces of 5 and 6 are:  [6, 8, 10, 12, 15, 19, 21, 22, 28, 29, 33, 37, 40, 42, 43, 47, 52]
Possible Spaces of 5 and 7 are:  [11, 12, 21, 23, 26, 28, 36, 37, 40, 49, 52]

Common Space Positions for Ciphertext 5:  [8, 12, 15, 19, 21, 37, 42, 52, 28, 40] 

Analyzing Ciphertext 6 ..
Possible Spaces of 6 and 0 are:  [10, 22, 28, 29, 33, 36, 40, 43, 47, 49]
Possible Spaces of 6 and 1 are:  [6, 7, 10, 19, 21, 22, 27, 29, 33, 35, 43, 45, 47, 50]
Possible Spaces of 6 and 2 are:  [2, 5, 6, 9, 10, 27, 29, 33, 34, 37, 43]
Possible Spaces of 6 and 3 are:  [1, 6, 7, 10, 13, 22, 23, 28, 29, 33, 37, 40, 43, 47, 49]
Possible Spaces of 6 and 4 are:  [4, 6, 10, 11, 14, 19, 22, 23, 29, 33, 34, 42, 43, 47]
Possible Spaces of 6 and 5 are:  [6, 8, 10, 12, 15, 19, 21, 22, 28, 29, 33, 37, 40, 42, 43, 47, 52]
Possible Spaces of 6 and 7 are:  [6, 8, 10, 11, 15, 19, 22, 23, 26, 29, 33, 36, 42, 43, 47, 49]

Common Space Positions for Ciphertext 6:  [10, 22, 29, 33, 43, 47, 6, 19] 

Analyzing Ciphertext 7 ..
Possible Spaces of 7 and 0 are:  [6, 8, 11, 15, 19, 23, 26, 28, 40, 42]
Possible Spaces of 7 and 1 are:  [7, 8, 11, 15, 21, 23, 26, 27, 35, 36, 42, 45, 49, 50]
Possible Spaces of 7 and 2 are:  [2, 5, 8, 9, 11, 15, 19, 22, 23, 26, 27, 34, 36, 37, 42, 47, 49]
Possible Spaces of 7 and 3 are:  [1, 7, 8, 11, 13, 15, 19, 26, 28, 36, 37, 40, 42]
Possible Spaces of 7 and 4 are:  [4, 8, 14, 15, 26, 34, 36, 49]
Possible Spaces of 7 and 5 are:  [11, 12, 21, 23, 26, 28, 36, 37, 40, 49, 52]
Possible Spaces of 7 and 6 are:  [6, 8, 10, 11, 15, 19, 22, 23, 26, 29, 33, 36, 42, 43, 47, 49]

Common Space Positions for Ciphertext 7:  [8, 11, 15, 19, 23, 26, 42, 36, 49] 

-----------------------------------------------------------------------------------------------------------------------------
---------------------- UPDATING THE KEY AND PLAINTEXTS ACCORDING TO THE SPACE POSITIONS -------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

Updated key knowing space positions for cipher 0 :

******o******************************************X******** 

P0:  ****** ************ ******** ******* *** ******** ********
P1:  ******s************o********p*******m***c********l********
P2:  ******n************ ********s*******n***m********n********
P3:  ******l************ ******** *******d*** ******** ********
P4:  ******e************r********a*******e***e********a********
P5:  ******n************t******** *******e*** ********a********
P6:  ****** ************ ********d*******m***r********n********
P7:  ******t************e********s******* ***l******** ********


Updated key knowing space positions for cipher 1 :

******o****************************G*************X******** 

P0:  ****** c***********o*e*****s ******l *** ****r*** a*******
P1:  ******s *********** * ***** p****** m***c**** ***l *******
P2:  ******no***********o*o***** s******on***m****i***nc*******
P3:  ******l ***********o*h*****e ******rd*** ****i*** a*******
P4:  ******ev***********=*t*****ha******re***e****l***ab*******
P5:  ******ng***********;* *****e ******re*** ****c***ar*******
P6:  ****** k***********o*s*****ed******ym***r****e***nc*******
P7:  ******ty*************s*****us******y ***l****m*** s*******


Updated key knowing space positions for cipher 2 :

**F***o****************************G*8***********X******** 

P0:  **d**n c*y********* *eq****s *****ul a** ****r*u* a*******
P1:  **d**ss *a*********o* c**** p*****t ma**c**** *a*l *******
P2:  ** ** no* ********* *o **** s***** on **m****i* *nc*******
P3:  **s**ll *e********* *he****e *****ord ** ****i*l* a*******
P4:  **e**rev*e*********r*ty****ha***** red**e****l*e*ab*******
P5:  **a**ing*h*********t* s****e *****are ** ****c*s*ar*******
P6:  **c**e k*y********* *s ****ed*****symm**r****e* *nc*******
P7:  **c**ity*a*********e*se****us*****ty c**l****m*g* s*******


Updated key knowing space positions for cipher 3 :

**F***o****************************G*8***********X******** 

P0:  *od**n c*y***g***** *equ***s *****ul a** ****r*u* a*******
P1:  *dd**ss *a***m*****o* co*** p*****t ma**c**** *a*l *******
P2:  *t ** no* ***c***** *o r*** s***** on **m****i* *nc*******
P3:  * s**ll *e*** ***** *he ***e *****ord ** ****i*l* a*******
P4:  *ee**rev*e***f*****r*ty ***ha***** red**e****l*e*ab*******
P5:  *ea**ing*h***t*****t* se***e *****are ** ****c*s*ar*******
P6:  *ec**e k*y***c***** *s n***ed*****symm**r****e* *nc*******
P7:  *ec**ity*a***h*****e*se ***us*****ty c**l****m*g* s*******


Updated key knowing space positions for cipher 4 :

**F***o****I***********************G*8****N******X******** 

P0:  *od*rn c*y*t*gr****r*equ***s *****ul a** *i**r*u* a*******
P1:  *dd*ess *a*d*mi****=* co*** p*****t ma**c*o** *a*l *******
P2:  *t *s no* *r*ct****r*o r*** s***** on **m*e**i* *nc*******
P3:  * s*all *e*e* r****r*he ***e *****ord ** *u**i*l* a*******
P4:  *ee* rev*e* *f **** *ty ***ha***** red**e* **l*e*ab*******
P5:  *ea*ning*h*w*to****&* se***e *****are ** * **c*s*ar*******
P6:  *ec*re k*y*e*ch****r*s n***ed*****symm**r*c**e* *nc*******
P7:  *ec*rity*a* *he****7*se ***us*****ty c**l* **m*g* s*******


Updated key knowing space positions for cipher 5 :

**F***o*@**I***********************G*8****N******X******** 

P0:  *od*rn cry*togra***t*equ***s *****ul a** *i**r*u* a*a*****
P1:  *dd*ess ra*domiz***;* co*** p*****t ma**c*o** *a*l *t*****
P2:  *t *s not *racti***t*o r*** s***** on **m*e**i* *nc*y*****
P3:  * s*all ne*er re***t*he ***e *****ord ** *u**i*l* a*c*****
P4:  *ee* revie* of s***&*ty ***ha***** red**e* **l*e*ab*l*****
P5:  *ea*ning h*w to *** * se***e *****are ** * **c*s*ar* *****
P6:  *ec*re key*excha***t*s n***ed*****symm**r*c**e* *nc*y*****
P7:  *ec*rity a* the ***1*se ***us*****ty c**l* **m*g* s*c*****


Updated key knowing space positions for cipher 6 :

**F***o*@*OI*********************.*G*8****N_*****X******** 

P0:  *od*rn cryptogra*** *equ***s c***ful a** *ig*r*u* a*a*****
P1:  *dd*ess randomiz***o* co*** pr***nt ma**c*ou* *a*l *t*****
P2:  *t *s not practi*** *o r*** so***y on **m*et*i* *nc*y*****
P3:  * s*all never re*** *he ***e p***word ** *ul*i*l* a*c*****
P4:  *ee* review of s***r*ty ***han***s red**e* v*l*e*ab*l*****
P5:  *ea*ning how to ***t* se***e s***ware ** * n*c*s*ar* *****
P6:  *ec*re key excha*** *s n***ed *** symm**r*c *e* *nc*y*****
P7:  *ec*rity at the ***e*se ***usa***ity c**l* d*m*g* s*c*****


Updated key knowing space positions for cipher 7 :

**F***o*@*OI*********************.*G*8****N_*****X******** 

P0:  *od*rn cryptogra***e*equ**es c***ful a** *ig*r*u* a*a*****
P1:  *dd*ess randomiz***** co**d pr***nt ma**c*ou* *a*l *t*****
P2:  *t *s not practi***e*o r**y so***y on **m*et*i* *nc*y*****
P3:  * s*all never re***e*he **me p***word ** *ul*i*l* a*c*****
P4:  *ee* review of s***7*ty **chan***s red**e* v*l*e*ab*l*****
P5:  *ea*ning how to ***1* se**re s***ware ** * n*c*s*ar* *****
P6:  *ec*re key excha***e*s n**ded *** symm**r*c *e* *nc*y*****
P7:  *ec*rity at the *** *se ** usa***ity c**l* d*m*g* s*c*****

-----------------------------------------------------------------------------------------------------------------------------
---------------------- EDUCATED GUESSES FOR THE PLAINTEXTS BASED ON THE LAST OUTPUT -----------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

>>  From P0, it's clear that the first plaintext is (EASILY GUESSED)

    "modern cryptography requires careful a** *ig*r*u* a*a*****"

    This can be used to deduce the first part of the key whose length is equivalent to:
        "modern cryptography requires careful "


>> After updating the key based on P0, the new output for plaintexts is as follows:

    P0:  modern cryptography requires careful a** *ig*r*u* a*a*****
    P1:  address randomization could prevent ma**c*ou* *a*l *t*****
    P2:  it is not practical to rely solely on **m*et*i* *nc*y*****
    P3:  i shall never reuse the same password ** *ul*i*l* a*c*****
    P4:  peer review of security mechanisms red**e* v*l*e*ab*l*****
    P5:  learning how to write secure software ** * n*c*s*ar* *****
    P6:  secure key exchange is needed for symm**r*c *e* *nc*y*****
    P7:  security at the expense of usability c**l* d*m*g* s*c*****


>> P6 is entirely easily guessed too
    
    "secure key exchange is needed for symmetric key encryption"

    Knowing that we have successfully deduced an entire sentence, then we can deduce the WHOLE KEY
    Therefore, guess ALL the messages

-----------------------------------------------------------------------------------------------------------------------------
-------------------------------------------- FINAL OUTPUT -------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

>> ITERATION 1

P0:  *od*rn cryptogra***e*equ**es c***ful a** *ig*r*u* a*a*****
P1:  *dd*ess randomiz***** co**d pr***nt ma**c*ou* *a*l *t*****
P2:  *t *s not practi***e*o r**y so***y on **m*et*i* *nc*y*****
P3:  * s*all never re***e*he **me p***word ** *ul*i*l* a*c*****
P4:  *ee* review of s***7*ty **chan***s red**e* v*l*e*ab*l*****
P5:  *ea*ning how to ***1* se**re s***ware ** * n*c*s*ar* *****
P6:  *ec*re key excha***e*s n**ded *** symm**r*c *e* *nc*y*****
P7:  *ec*rity at the *** *se ** usa***ity c**l* d*m*g* s*c*****


>> ITERATION 2

P0:  modern cryptography requires careful a** *ig*r*u* a*a*****
P1:  address randomization could prevent ma**c*ou* *a*l *t*****
P2:  it is not practical to rely solely on **m*et*i* *nc*y*****
P3:  i shall never reuse the same password ** *ul*i*l* a*c*****
P4:  peer review of security mechanisms red**e* v*l*e*ab*l*****
P5:  learning how to write secure software ** * n*c*s*ar* *****
P6:  secure key exchange is needed for symm**r*c *e* *nc*y*****
P7:  security at the expense of usability c**l* d*m*g* s*c*****


>> ITERATION 3

P0:  modern cryptography requires careful and rigorous analysis
P1:  address randomization could prevent malicious call attacks
P2:  it is not practical to rely solely on symmetric encryption
P3:  i shall never reuse the same password on multiple accounts
P4:  peer review of security mechanisms reduces vulnerabilities
P5:  learning how to write secure software is a necessary skill
P6:  secure key exchange is needed for symmetric key encryption
P7:  security at the expense of usability could damage security

So, using the algorithm I followed, I was able to determine the messages in 3 Iterations

-----------------------------------------------------------------------------------------------------------------------------